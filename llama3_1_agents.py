# -*- coding: utf-8 -*-
"""llama3.1 agents.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Yw2vkC2W7tbY_Mqg-dkZBNskV1h8A2n
"""

!pip install groq

from groq import Groq

groq_client = Groq(
    api_key="your groq api key",
)

llama_70B = "llama-3.1-70b-versatile"
llama_405B = "llama-3.1-405b-reasoning"

!pip install -q together

from together import Together

together_client = Together(api_key="8957bc60d2c449c6c6753ee31cc16ef08180d4e9725c9f7082691ebfdcb6c0d9")

def get_user_input():
  user_input = input("Please enter the industry or company you want to target: ")
  return user_input

!pip install openai

from openai import OpenAI

openai_client = OpenAI(
    api_key="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",
    base_url="https://api.perplexity.ai"
)

def query_agent(target):
    response = together_client.chat.completions.create(
        model="meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
        messages=[
            {
                "role": "system",
                "content": """You are an AI assistant that writes concise search queries for market research.
                Create 4 short search queries based on the given target industry or company.
                Query 01: biggest pain points faced by this avatar
                Query 02: biggest companies in this industry
                Query 03: how companies in this industry get clients
                Query 04: where to find companeis in this industry online
                IMPORTANT: Respond with only the queries, one per line."""
            },
            {
                "role": "user",
                "content": f"Here's the industry / company to perform market research on: #### {target} ####"
            }
        ],
        max_tokens=150,
        temperature=0.7,
        top_p=1,
        top_k=50,
        repetition_penalty=1,
        stop=["<|eot_id|>"]
    )
    queries = response.choices[0].message.content.split('\n')
    return [query.strip() for query in queries if query.strip()]

def web_search_agent(query):
    response = openai_client.chat.completions.create(
        model="llama-3-sonar-large-32k-online",
        messages=[
            {"role": "system", "content": "You are a web search assistant. Provide a concise summary of the search results."},
            {"role": "user", "content": f"Search the web for: {query}"}
        ],
    )
    return response.choices[0].message.content

# Example usage
search_results = []
for query in generated_queries:
    print("Searching for...", query)
    result = web_search_agent(query)
    search_results.append(result)

search_results

def cold_email_agent(target, search_results):
    # Combine all search results into a single string
    combined_results = "\n".join(search_results)

    response = together_client.chat.completions.create(
        model="meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
        messages=[
            {
                "role": "system",
                "content": """You are an expert cold email writer.
                Your task is to write concise and personalized cold emails based on the Market Research given to you.
                Make sure to utilize all 4 areas of the research I(pain points, companies, clients, and online sources)
                Focus on describing what the target company will get, add an appealing guarantee.
                Keep the email concise and use plain English.
                DO NOT OUTPUT ANY OTHER TEXT !!! ONLY THE COLD EMAIL ITSELF!.
                """
            },
            {
                "role": "user",
                "content": f"Here is the target company: {target} \n Here is the market research: #### {combined_results} #### ONLY OUTPUT THE EMAIL ITSELF. NO OTHER TEXT!!"
            }
        ],
        max_tokens=500,
        temperature=0.1,
        top_p=1,
        top_k=50,
        repetition_penalty=1,
        stop=["<|eot_id|>"]
    )

    return response.choices[0].message.content

user_input = get_user_input()

generated_queries = query_agent(user_input)
generated_queries

search_results = []
for query in generated_queries:
    print("Searching for...", query)
    result = web_search_agent(query)
    search_results.append(result)

print("""Subject: Boost Your Client Acquisition with Our Proven Strategies
Hi [Recipient's Name],
I hope this message finds you well! I’m reaching out to share how we can help your IT company in Vadodara tackle one of the biggest challenges in the industry: customer acquisition.
Many IT firms in your area face significant hurdles in attracting and retaining clients, often due to intense competition and the evolving demands of the market. Our tailored strategies focus on enhancing your visibility and engagement, ensuring you stand out to potential clients.
By partnering with us, you can expect:
* Increased Client Acquisition: We specialize in strategies that have proven successful for IT companies, helping you attract more clients effectively.
* Customized Solutions: Our approach is tailored to your specific needs, ensuring that we address your unique pain points.
* Satisfaction Guarantee: If you don’t see an increase in client inquiries within the first three months, we’ll work for free until you do.
Let’s schedule a quick call to discuss how we can help your company grow. Looking forward to your response!
Best regards,
[Your Name]
[Your Position]
[Your Company]
[Your Contact Information]""")

